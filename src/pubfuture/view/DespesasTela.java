/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pubfuture.view;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pubfuture.bean.Conta;
import pubfuture.bean.Despesas;

import pubfuture.dao.ContaDaoImpl;
import pubfuture.dao.DespesasDaoImpl;

import sun.font.TrueTypeFont;

/**
 *
 * @author Igor Fernandes
 */
public class DespesasTela extends javax.swing.JFrame {

    Despesas despesa = new Despesas();
    DespesasDaoImpl dao = new DespesasDaoImpl();
    Conta conta = new Conta();
    ContaDaoImpl daoConta = new ContaDaoImpl();
    List<Despesas> despesas;
    DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");

    public DespesasTela() {
        initComponents();
        listar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDados = new javax.swing.JPanel();
        varDtPagamento = new javax.swing.JFormattedTextField();
        varDtPagEsperado = new javax.swing.JFormattedTextField();
        varValor = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboTipo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btCadastrar = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btDeletar = new javax.swing.JButton();
        varPesquisa = new javax.swing.JFormattedTextField();
        varIdConta = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        btVizualizar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btPesquisa = new javax.swing.JButton();
        btPesquisaIdConta = new javax.swing.JButton();
        varPesquisaIdConta = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Despesas");

        panelDados.setAutoscrolls(true);
        panelDados.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelDados.setPreferredSize(new java.awt.Dimension(750, 450));

        try {
            varDtPagamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            varDtPagEsperado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel1.setText("Data de pagamento:");

        jLabel2.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel2.setText("Data esperada do pagamento:");

        comboTipo.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alimentação", "Educação", "Lazer", "Moradia", "Roupa", "Saúde", "Transporte", "Outros" }));
        comboTipo.setToolTipText("");
        comboTipo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel4.setText("Tipo:");

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel5.setText("Valor:");

        btCadastrar.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        btCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pubfuture/icons/adicionar.png"))); // NOI18N
        btCadastrar.setToolTipText("Registrar Receita");
        btCadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });

        btAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pubfuture/icons/vire-a-direita.png"))); // NOI18N
        btAtualizar.setToolTipText("Atualizar receita");
        btAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pubfuture/icons/lixo.png"))); // NOI18N
        btDeletar.setToolTipText("Excluir receita");
        btDeletar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel7.setText("ID Conta:");

        btVizualizar.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        btVizualizar.setText("Vizualizar todas as despesas");
        btVizualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVizualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVizualizarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel10.setText("Id Despesa:");

        btPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pubfuture/icons/procurar (2).png"))); // NOI18N
        btPesquisa.setToolTipText("Pesquisar despesas por ID");
        btPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaActionPerformed(evt);
            }
        });

        btPesquisaIdConta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pubfuture/icons/procurar (2).png"))); // NOI18N
        btPesquisaIdConta.setToolTipText("´Pesquisar despesas pelo ID da conta");
        btPesquisaIdConta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisaIdConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaIdContaActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel11.setText("Id Conta:");

        javax.swing.GroupLayout panelDadosLayout = new javax.swing.GroupLayout(panelDados);
        panelDados.setLayout(panelDadosLayout);
        panelDadosLayout.setHorizontalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createSequentialGroup()
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(varDtPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(varDtPagEsperado, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(varIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 297, Short.MAX_VALUE)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(varPesquisaIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(varPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addComponent(btDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btVizualizar))
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelDadosLayout.createSequentialGroup()
                                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(panelDadosLayout.createSequentialGroup()
                                                .addGap(140, 140, 140)
                                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(varValor, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(75, 75, 75)
                                                .addComponent(btCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11)))
                                .addGap(18, 18, 18)
                                .addComponent(btPesquisaIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(42, 42, 42))
        );
        panelDadosLayout.setVerticalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(varDtPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(varDtPagEsperado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(varPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(varIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btPesquisa))
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btPesquisaIdConta)
                                    .addGroup(panelDadosLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(varPesquisaIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)))
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btAtualizar)
                            .addComponent(btVizualizar)))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(varValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btCadastrar))
                        .addGap(18, 18, 18)
                        .addComponent(btDeletar)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tabela.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Despesa", "Dt Pagamento", "Dt pagamento esperado", "Tipo", "ID Conta", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDados, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelDados, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
        if (!temErro()) {

            //Esse trecho do código informa ao usuário que ele passou dos limites está com saldo negativo  
            int idConta = Integer.parseInt(varIdConta.getText());
            conta = daoConta.pesquisaPorId(idConta);
            if (Double.parseDouble(varValor.getText()) > conta.getSaldo()) {
                JOptionPane.showMessageDialog(null, "Cuidado! O saldo da conta com id = " + varIdConta.getText() + " está negativo!");
            }

            //setando valores formatados das datas nas variaveis -- foi necessário usar um Try-Catch para isso
            try {

                String dataString = varDtPagamento.getText();
                despesa.setDtpagamento(new java.sql.Date(fmt.parse(dataString).getTime()));
                dataString = varDtPagEsperado.getText();
                despesa.setDtpagesperado(new java.sql.Date(fmt.parse(dataString).getTime()));

                //setando o restante dos valores nas variaveis
                despesa.setTipo((String) comboTipo.getSelectedItem());
                despesa.setValor(Double.parseDouble(varValor.getText().trim().replace(",", ".")));
                conta = daoConta.pesquisaPorId(Integer.parseInt(varIdConta.getText()));
                despesa.setConta(conta);

                //salvando no banco
                dao.registarDespesa(despesa);

                //informando que o processo foi bem sucedido, limpando os campos e mostrando os novos registros no banco
                JOptionPane.showMessageDialog(null, "Despesa registrada com sucesso");
                limparCampos();
                listar();

            } catch (ParseException ex) {
                Logger.getLogger(DespesasTela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btCadastrarActionPerformed

    //Coloca dados da tabela nos campos das variáveis, para realizar a atualização
    //Não foi possível incluir as datas nos campos das varíveis devido a formatação dos campos
    //Sempre que for atualizar algo terá que informar as datas manualmente
    private void tabelaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyReleased
        if (tabela.getSelectedRow() != -1) {
            varDtPagamento.setText(tabela.getValueAt(tabela.getSelectedRow(), 1).toString());
            varDtPagEsperado.setText(tabela.getValueAt(tabela.getSelectedRow(), 2).toString());
            comboTipo.setSelectedItem(tabela.getValueAt(tabela.getSelectedRow(), 3).toString());
            varValor.setText(tabela.getValueAt(tabela.getSelectedRow(), 5).toString());
        }
    }//GEN-LAST:event_tabelaKeyReleased

    //Coloca dados da tabela nos campos das variáveis, para realizar a atualização
    //Não foi possível incluir as datas nos campos das varíveis devido a formatação dos campos
    //Sempre que for atualizar algo terá que informar as datas manualmente
    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        if (tabela.getSelectedRow() != -1) {
            varDtPagamento.setText(tabela.getValueAt(tabela.getSelectedRow(), 1).toString());
            varDtPagEsperado.setText(tabela.getValueAt(tabela.getSelectedRow(), 2).toString());
            comboTipo.setSelectedItem(tabela.getValueAt(tabela.getSelectedRow(), 3).toString());
            varValor.setText(tabela.getValueAt(tabela.getSelectedRow(), 5).toString());
        }
    }//GEN-LAST:event_tabelaMouseClicked

    //Metodo para atualizar datas, tipo de despesa ou valor. 
    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        if (validarDtPagamento()) {
            JOptionPane.showMessageDialog(null, "Insira a data de pagamento");
        }
        if (validarDtPagEsperado()) {
            JOptionPane.showMessageDialog(null, "Insira a data esperada de pagamento");
        }

        if (tabela.getSelectedRow() != 1) {
            try {
                despesa = dao.pesquisaPorId((int) tabela.getValueAt(tabela.getSelectedRow(), 0));
                conta = daoConta.pesquisaPorId((int) tabela.getValueAt(tabela.getSelectedRow(), 4));

                String dataString = varDtPagamento.getText();
                despesa.setDtpagamento(new java.sql.Date(fmt.parse(dataString).getTime()));
                dataString = varDtPagEsperado.getText();
                despesa.setDtpagesperado(new java.sql.Date(fmt.parse(dataString).getTime()));
                despesa.setTipo((String) comboTipo.getSelectedItem());
                despesa.setValor(Double.parseDouble(varValor.getText().replace(",", ".")));

                //alterando valor no saldo da conta após valor da despesa ser alterado
                double contaSaldoAnterior = conta.getSaldo() + despesa.getValor();
                double contaNovoSaldo = contaSaldoAnterior - Double.parseDouble(varValor.getText().replace(",", "."));
                conta.setSaldo(contaNovoSaldo);
                daoConta.alterar(conta);

                dao.alterar(despesa);
                JOptionPane.showMessageDialog(null, "Despesa atualizada com sucesso");
                limparCampos();
                listar();

            } catch (ParseException ex) {
                Logger.getLogger(DespesasTela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btAtualizarActionPerformed


    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed
        if (tabela.getSelectedRow() != -1) {

            //pegando o id da despesa na tabela
            int id = (int) tabela.getValueAt(tabela.getSelectedRow(), 0);

            //alterando o saldo ao excluir despesa
            despesa = dao.pesquisaPorId(id);
            double novoSaldo = despesa.getConta().getSaldo() + despesa.getValor();
            int idConta = despesa.getConta().getId();
            conta = daoConta.pesquisaPorId(idConta);
            conta.setSaldo(novoSaldo);
            daoConta.alterar(conta);
            //alterando o saldo ao excluir despesa

            //informando que o processo foi bem sucedido, limpando os campos e mostrando os novos registros no banco
            dao.deletar(id);
            JOptionPane.showMessageDialog(null, "Conta deletada com sucesso");
            listar();

        }
    }//GEN-LAST:event_btDeletarActionPerformed

    private void btVizualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVizualizarActionPerformed
        listar();
    }//GEN-LAST:event_btVizualizarActionPerformed

    private void btPesquisaIdContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaIdContaActionPerformed
        pesquisaIdConta(Integer.parseInt(varPesquisaIdConta.getText()));
    }//GEN-LAST:event_btPesquisaIdContaActionPerformed

    private void btPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaActionPerformed
        pesquisaId(Integer.parseInt(varPesquisa.getText()));
    }//GEN-LAST:event_btPesquisaActionPerformed

    //Método para validar dados informados antes de inserir um novo registro no banco
    private boolean temErro() {

        if (validarDtPagamento()) {
            JOptionPane.showMessageDialog(null, "Insira uma data válida");
            return true;
        }

        if (validarDtPagEsperado()) {
            JOptionPane.showMessageDialog(null, "Insira uma data válida");
            return true;

        }

        if (validarValor()) {
            JOptionPane.showMessageDialog(null, "Insira um valor válido");
            return true;
        }

        if (varIdConta.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Insira uma conta válida");
            return true;
        }

        return false;
    }

    //METODOS AUXILIARES
    private boolean validarDtPagamento() {
        String dataPagamento = varDtPagamento.getText().trim();
        String primeiroCaracter = dataPagamento.substring(0, 1);
        return primeiroCaracter.equals("/");
    }

    private boolean validarDtPagEsperado() {
        String dtPagEsperado = varDtPagEsperado.getText().trim();
        String primeiroCaracter = dtPagEsperado.substring(0, 1);
        return primeiroCaracter.equals("/");
    }

    private boolean validarValor() {
        String valor = varValor.getText().trim();
        if (valor.equals("")) {
            return true;
        } else {
            valor = valor.replace(",", ".");
            double valorSalario = Double.parseDouble(valor);
            if (valorSalario < 0) {
                return true;
            }
        }

        return false;
    }

    public void pesquisaId(int idDespesa) {

        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        modelo.setNumRows(0);

        for (Despesas objetos : dao.pesquisaIdLista(idDespesa)) {
            modelo.addRow(new Object[]{
                objetos.getIddespesas(),
                objetos.getDtpagamento(),
                objetos.getDtpagesperado(),
                objetos.getTipo(),
                objetos.getConta().getId(),
                objetos.getValor()

            });

        }
    }

    public void pesquisaIdConta(int idConta) {

        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        modelo.setNumRows(0);

        for (Despesas objetos : dao.pesquisaIdContaLista(idConta)) {
            modelo.addRow(new Object[]{
                objetos.getIddespesas(),
                objetos.getDtpagamento(),
                objetos.getDtpagesperado(),
                objetos.getTipo(),
                objetos.getConta().getId(),
                objetos.getValor()

            });

        }

    }

    public void listar() {

        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        modelo.setNumRows(0);

        for (Despesas objetos : dao.listar()) {
            modelo.addRow(new Object[]{
                objetos.getIddespesas(),
                objetos.getDtpagamento(),
                objetos.getDtpagesperado(),
                objetos.getTipo(),
                objetos.getConta().getId(),
                objetos.getValor()

            });

        }

    }

    private void limparCampos() {
        varDtPagamento.setText("");
        varDtPagEsperado.setText("");
        varIdConta.setText("");
        varValor.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DespesasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DespesasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DespesasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DespesasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DespesasTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btDeletar;
    private javax.swing.JButton btPesquisa;
    private javax.swing.JButton btPesquisaIdConta;
    private javax.swing.JButton btVizualizar;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelDados;
    private javax.swing.JTable tabela;
    private javax.swing.JFormattedTextField varDtPagEsperado;
    private javax.swing.JFormattedTextField varDtPagamento;
    private javax.swing.JFormattedTextField varIdConta;
    private javax.swing.JFormattedTextField varPesquisa;
    private javax.swing.JFormattedTextField varPesquisaIdConta;
    private javax.swing.JFormattedTextField varValor;
    // End of variables declaration//GEN-END:variables
}
